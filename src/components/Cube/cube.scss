@function pow($number, $exponent) {
  $value: 1;

  @if $exponent > 0 {
    @for $i from 1 through $exponent {
      $value: $value * $number;
    }
  }

  @return $value;
}

[class*="cube"] {
  position: absolute;
}

.cube {
  top: 50%;
  left: 50%;
  transform-style: preserve-3d;
  transition: transform 1s ease-in-out 0.4s;

  &--side {
    display: flex;
    align-items: center;
    justify-content: center;

    margin: calc(-0.5 * var(--vh, 100vh)) (-0.5 * $base);
    width: $base;
    height: var(--vh, 100vh);
    // backface-visibility: hidden;

    box-shadow: 0 0 0 2px;
    background: white;

    &__5,
    &__6 {
      margin-top: -0.5 * $base;
      height: $base;
    }

    @for $i from 0 to 6 {
      $adjustedVw: 0.5 * $base;
      $adjustedVh: calc(0.5 * var(--vh));

      &__#{$i + 1} {
        // background-color: nth($colors, $i);
        transform: if($i < 4, rotateY($i * 90deg), rotateX(pow(-1, $i) * 90deg))
          translateZ(if($i < 4, $adjustedVw, $adjustedVh));
      }
    }

    // translateZ(0.5 * if($i < 4, $base, $height));
    // translateZ(calc(0.5 * if($i < 4, #{$base}, #{var(--vh, $height)})));

    &-placeholder {
      text-transform: uppercase;
      font-size: 5rem;
      background-image: linear-gradient(45deg, $darkBlue, $purple, $red);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      // background-size: 200% 100%;
      text-align: center;
      margin: auto;
      text-shadow: 0.1rem 0.3rem 0.4rem rgba(0, 0, 0, 0.2);

      @include respond(phone) {
        font-size: 4rem;
      }
    }
  }
}
